-- DCGM - CYGI License.
-- Copyright (c) 2025 Victor Fuchadzhy.
-- Beast Vision Goggles: Graphics.

function update_shader()
    get_console():execute("r__nightvision " .. bvg_var.generation)
    get_console():execute("shader_param_8 " .. pack_data_0())
    get_console():execute("shader_param_7 " .. pack_data_1())
end

function disable_shader()
    get_console():execute("r__nightvision 0")
    get_console():execute("shader_param_8 (0,0,0,0)")
end

function pack_data_0()
    local x_1 = tostring(bvg_var.generation)                      -- Generation (1,2,3) - outputs 1.x to 3.x
    local x_2 = tostring(bvg_var.num_tubes * 10)                  -- Num Tubes (1,2,4,1.1,1.2) outputs x.10, x.20, x.40, x.11, or x.12
    local y_1 = tostring(math.floor(bvg_var.gain * 10))           -- Gain Adjust (0.1 to 3) -- outputs 1.y to 30.y in 1. increment.
    local y_2 = tostring(math.floor(bvg_cfg.washout_thresh * 10)) -- Washout Thresh (0.0 - 0.9) - outputs y.0 to y.9 in .1 increment.
    local z_1 = tostring(math.floor(bvg_var.vignette * 100))      -- Vignette Amount (0.0 to 1.0) outputs 0.z to 100.z in 1. increment.
    local z_2 = tostring(math.floor(bvg_var.glitch_power * 10))   -- Glitch Power (0.0 - 0.9) - outputs z.0 to z.9 in .1 increment.
    local w_1 = tostring((math.floor(bvg_cfg.gain_offset * 10)))  -- Gain Offset (0.5 to 3.0) - outputs 5.w to 30.w in 1. increment.
    local w_2 = tostring(bvg_var.mode)                            -- Mode (0,1) - outputs w.0 or w.1 depending on mode.

    return "(" ..
        x_1 .. "." .. x_2 .. "," .. y_1 .. "." .. y_2 .. "," .. z_1 .. "." .. z_2 .. "," .. w_1 .. "." .. w_2 .. ")"
end

function pack_data_1()
    local x_1 = tostring(math.floor(bvg_var.flip_down)) -- Flip down amount - outputs 1.x to 100.x
    local x_2 = tostring(0)
    local y_1 = tostring(0)
    local y_2 = tostring(math.floor(bvg_var.vg_radius * 10)) -- Radius for NVG effect - outputs 0.0 to 0.9
    local z_1 = tostring(0)
    local z_2 = tostring(0)
    local w_1 = tostring(0)
    local w_2 = tostring(0)

    return "(" ..
        x_1 .. "." .. x_2 .. "," .. y_1 .. "." .. y_2 .. "," .. z_1 .. "." .. z_2 .. "," .. w_1 .. "." .. w_2 .. ")"
end