-- DCGM - CYGI License.
-- Copyright (c) 2025 Victor Fuchadzhy.
-- Beast Vision Goggles: Animation.

torch_state = 0

function set_vision_animated(section, state)
    if (not section) then return end
    if (bvg_ini.try_get_vision_effect_id(section) == -1) then return end
    if (not is_animation_allowed()) or (not item_device.can_toggle_torch()) then return end
    if (lam2.get_action_with_tag("nvg_animation")) then return end

    torch_state = 1
    
    local weapon_zoomed = bvg_weapon.is_actor_weapon_zoomed() and (not (IsPistol(db.actor:active_item(), nil)) or db.actor:active_detector())
    local det_active = db.actor:active_detector() or nil

    -- If holding weapon and aiming disable ADS.
    if (db.actor:active_item() and (not det_active and weapon_zoomed)) then
        if (get_console():get_bool("wpn_aim_toggle")) then
            level.press_action(bind_to_dik(key_bindings.kWPN_ZOOM))
        else
            level.release_action(bind_to_dik(key_bindings.kWPN_ZOOM))
        end
    end

    if (state) then
        -- Enable VG.
        lam2.add_action(lam2.get_template_action_wait_for_seconds(0.05)) -- Anim bug? small delay to prevent ctd.
        lam2.add_action(get_template_action_nvg_enable_start())          -- Enter hand motion.
        lam2.add_action(get_template_action_nvg_enable(section))         -- Equip nvg motion.
    else
        -- Disable VG.
        lam2.add_action(get_template_action_nvg_disable_start())         -- Fade in.
        lam2.add_action(get_template_action_nvg_disable(section))        -- Unequip NVG motion.
        lam2.add_action(lam2.get_template_action_wait_for_seconds(0.05)) -- Anim bug? Small delay to prevent ctd.
        lam2.add_action(get_template_action_nvg_disable_end())           -- Exit hand motion.
    end
end

function is_animation_allowed()
    return (torch_state == 0 and (not game.only_movekeys_allowed()) and (not IsMoveState("mcClimb")))
end

function is_playing()
    if (not bvg_var.crt_latch or not bvg_var.flip_latch) then
        return true
    end
    
    if (torch_state == 1) then
        return true
    end

    return false
end

function update()
    if ((not bvg_var.crt_latch or not bvg_var.flip_latch)) then
        
        latch_animation_update()
        
        -- TODO: v.fuchadzhy: This is very bad. We sending console / gpu commands every frame.
        -- To make things worse, bvg_render packs data with string concat.
        bvg_render.update_shader()
    end
end

-- Black screen fading animation (vignette).
function latch_animation_update()
    if (not bvg_var.flip_latch and item_device.nv_state) then
        if (bvg_var.flip_down < 100) then
            bvg_var.flip_down = bvg_var.flip_down * bvg_const.flip_speed
        end

        if (bvg_var.flip_down >= 100) then
            bvg_var.flip_down = 100
            bvg_var.flip_latch = true
        end
    end

    if (bvg_var.flip_latch and not bvg_var.crt_latch and item_device.nv_state) then
        if (bvg_var.vignette > bvg_const.vignette_amount) then
            bvg_var.vignette = bvg_var.vignette * (1 / bvg_const.vignette_speed)
        end

        if (bvg_var.vignette <= bvg_const.vignette_amount) then
            bvg_var.vignette = bvg_const.vignette_amount
            bvg_var.crt_latch = true
        end
    end
end

function get_template_action_nvg_enable_start()
    local a = lam2.get_template_action_play_animation()
    a.tag = "nvg_animation"
    a.name = "nvg_enable_start"
    a.sec = "anim_nvg_transition_hud"
    a.anm = "anm_show_start"
    a.cam = "cam_show_start"
    a.hands = 1
    a.anm_blend = true
    a.on_enter = function (self)
        game.play_hud_anm("liz\\headlamp\\liz_headlamp_toggle_weapon_sway.anm", 0, 1, 1, false)
        
        -- weapon inertia expanded patch
        if (liz_inertia_expanded) then
            liz_inertia_expanded.set_mask_flag(liz_inertia_expanded.mask_layers.anm_plays, true)
        end
    end
    return a
end

function get_template_action_nvg_enable(section)
    local a = lam2.get_template_action_play_animation()
    a.tag = "nvg_animation"
    a.name = "nvg_enable"
    a.sec = "anim_nvg_hud"
    a.anm = "anm_show"
    a.hands = 1
    a.anm_blend = true
    a.target = section
    a.fade_start = false
    a.fade_end = false
    a.on_execute = function (self, time)
        if time > self.duration - 0.35 and not self.fade_start then
            self.fade_start = true
            level.add_pp_effector("deimos_short.ppe", 4233, false)
        end
        if time > self.duration - 0.25 and not self.fade_end then
            self.fade_end = true
            level.remove_pp_effector(4233)
        end
    end
    a.on_exit = function (self)
        bvg.set_vision_device_state(section, true)
        
        torch_state = 0
        
        -- Weapon inertia expanded patch
        if (liz_inertia_expanded) then
            liz_inertia_expanded.set_mask_flag(liz_inertia_expanded.mask_layers.anm_plays, false)
        end
    end
    return a
end

function get_template_action_nvg_disable_start()
    local a = {
        tag = "nvg_animation",
        name = "nvg_disable_start",
        hands = 1,
        fade_disabled = false,
        enter = function (self)
            level.add_pp_effector("deimos_short.ppe", 4233, false)
        end,
        execute = function (self,time)
            if (not self.fade_disabled) then
                self.fade_disabled = true
                level.remove_pp_effector(4233)
            end
            if (time > 0.4) then
                return lam2.states.success
            end
            return lam2.states.running
        end
    }
    return a
end

function get_template_action_nvg_disable(section)
    local a = lam2.get_template_action_play_animation()
    a.tag = "nvg_animation"
    a.name = "nvg_disable"
    a.sec = "anim_nvg_hud"
    a.anm = "anm_hide"
    a.cam = "cam_hide"
    a.hands = 1
    a.anm_blend = true
    a.target = section
    a.on_enter = function (self)
        game.play_hud_anm("liz\\headlamp\\liz_headlamp_toggle_weapon_sway.anm", 0, 1, 1, false)
        
        bvg.set_vision_device_state(section, false)
        
        -- Weapon inertia expanded patch
        if (liz_inertia_expanded) then
            liz_inertia_expanded.set_mask_flag(liz_inertia_expanded.mask_layers.anm_plays, true)
        end
    end
    return a
end

function get_template_action_nvg_disable_end()
    local a = lam2.get_template_action_play_animation()
    a.tag = "nvg_animation"
    a.name = "nvg_disable_end"
    a.sec = "anim_nvg_transition_hud"
    a.anm = "anm_hide_end"
    a.hands = 1
    a.anm_blend = true
    a.on_exit = function (self)
        torch_state = 0
        
        -- Weapon inertia expanded patch
        if (liz_inertia_expanded) then
            liz_inertia_expanded.set_mask_flag(liz_inertia_expanded.mask_layers.anm_plays, false)
        end
    end
    return a
end